================================================================
		Log-Structured Merge-Tree (LSM-Tree)
================================================================

Yep,this is a Log-Structured Merge-Tree (LSM-Tree) project, which is written in ANSI-C, without external dependencies.
It is a simply LSM-Tree implementation, and is intended as nessDB storage engine(v1.8).
Still under construction NOW.

LAYOUT
=======
 mtable : memory table(a key sorted skiplist,very fast,200000 ops/second)
 sstable : On-Disk indices(key sorted),include : block index,blocks
 log : insert/update/delete log file,when checkpoint created it will be deleted.

HOW TODO
==========
 $make bench

BENCHMARK
=========
Keys:		16 bytes each
Values:		20 bytes each
Entries:	3000000
IndexSize:	71.5 MB (estimated)
DataSize:	68.7 MB (estimated)
---------------------------------------------------------------------------------------------------
LSM-Tree:	version 0.1(LSM-Tree storage engine)
Date:		Tue Dec 13 17:27:58 2011
CPU:		2 *  Intel(R) Pentium(R) Dual  CPU  T3200  @ 2.00GHz
CPUCache:	1024 KB

+-----------------------------+----------------+------------------------------+-------------------+
|Random-Write	(done:3000000): 0.000013 sec/op; 76923.1 writes/sec(estimated); cost:39.000(sec)
+-----------------------------+----------------+------------------------------+-------------------+
|Random-Read	(done:100000): 0.000030 sec/op; 33333.3 reads /sec(estimated); cost:3.000(sec)
+-----------------------------+----------------+------------------------------+-------------------+


 Drafted By BohuTANG <overred.shuttler at gmail dot com>
 2011
